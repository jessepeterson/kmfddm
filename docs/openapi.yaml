openapi: 3.0.0
info:
  version: 0.1.0
  title: KMFDDM server API
servers:
  - url: http://[::1]:9002/
paths:
  /version:
    get:
      description: Returns the running KMFDDM server version
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties: 
                  version:
                    type: string
                    example: "v0.1.0"
  /v1/declarations:
    get:
      description: Retrieve a list of declarations.
      security:
        - basicAuth: []
      responses:
        '200':
          $ref: '#/components/responses/DeclarationIDList'
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '400':
           $ref: '#/components/responses/JSONBadRequest'
        '500':
           $ref: '#/components/responses/JSONError'
    put:
      description: Store declaration. Adds new or overwrites an existing declaration. A declaration does not need to include the `ServerToken` field â€” KMFDDM generates one for you based on the content (it is ignored and overwritten if included).
      security:
        - basicAuth: []
      requestBody:
        $ref: '#/components/requestBodies/Declaration'
      responses:
        '204':
          description: Declaration already exists and is unchanged.
        '304':
          description: Declaration is either new or has changed. Notification will take place unless disabled with parameter.
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '400':
           $ref: '#/components/responses/JSONBadRequest'
        '500':
           $ref: '#/components/responses/JSONError'
      parameters:
        - $ref: '#/components/parameters/noNotify'
  /v1/declarations/{id}:
    get:
      description: Retrieve a declaration.
      security:
        - basicAuth: []
      responses:
        '200':
          $ref: '#/components/responses/Declaration'
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '400':
           $ref: '#/components/responses/JSONBadRequest'
        '500':
           $ref: '#/components/responses/JSONError'
    delete:
      description: Delete a declaration. It is assumed that any declaration deleted has no dependant delcarations and is not in any sets (and so no notifications are performed). Some storage backends may try to enforce these assumptions through e.g. database constraints.
      security:
        - basicAuth: []
      responses:
        '204':
          description: Declaration was deleted.
        '304':
          description: Declaration did not exist for deletion (effectively no change).
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '400':
           $ref: '#/components/responses/JSONBadRequest'
        '500':
           $ref: '#/components/responses/JSONError'
    parameters:
      - $ref: '#/components/parameters/declarationID'
  /v1/declarations/{id}/touch:
    post:
      description: Updates a declaration's `ServerToken` (only).
      security:
        - basicAuth: []
      responses:
        '204':
          description: Declaration server token successfully updated.
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '400':
           $ref: '#/components/responses/JSONBadRequest'
        '500':
           $ref: '#/components/responses/JSONError'
    parameters:
      - $ref: '#/components/parameters/declarationID'
  /v1/sets:
    get:
      description: Retrieve the list of sets.
      security:
        - basicAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SetNameList'
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '400':
           $ref: '#/components/responses/JSONBadRequest'
        '500':
           $ref: '#/components/responses/JSONError'
  /v1/set-declarations/{id}:
    get:
      description: Retreive the list of declarations in a set.
      security:
        - basicAuth: []
      responses:
        '200':
          $ref: '#/components/responses/DeclarationIDList'
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '400':
           $ref: '#/components/responses/JSONBadRequest'
        '500':
           $ref: '#/components/responses/JSONError'
    put:
      description: Associate set and declaration.
      security:
        - basicAuth: []
      responses:
        '204':
          $ref: '#/components/responses/AssociationChanged'
        '304':
          $ref: '#/components/responses/AssociationUnchanged'
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '400':
           $ref: '#/components/responses/JSONBadRequest'
        '500':
           $ref: '#/components/responses/JSONError'
      parameters:
        - $ref: '#/components/parameters/noNotify'
        - $ref: '#/components/parameters/declarationIDInQuery'
    delete:
      description: Dissociate set and declaration.
      security:
        - basicAuth: []
      responses:
        '204':
          $ref: '#/components/responses/DissociationChanged'
        '304':
          $ref: '#/components/responses/DissociationUnchanged'
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '400':
           $ref: '#/components/responses/JSONBadRequest'
        '500':
           $ref: '#/components/responses/JSONError'
      parameters:
        - $ref: '#/components/parameters/noNotify'
        - $ref: '#/components/parameters/declarationIDInQuery'
    parameters:
      - $ref: '#/components/parameters/setName'
  /v1/enrollment-sets/{id}:
    get:
      description: tbd
      security:
        - basicAuth: []
      responses:
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '400':
           $ref: '#/components/responses/JSONBadRequest'
        '500':
           $ref: '#/components/responses/JSONError'
    put:
      description: tbd
      security:
        - basicAuth: []
      responses:
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '400':
           $ref: '#/components/responses/JSONBadRequest'
        '500':
           $ref: '#/components/responses/JSONError'
    delete:
      description: tbd
      security:
        - basicAuth: []
      responses:
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '400':
           $ref: '#/components/responses/JSONBadRequest'
        '500':
           $ref: '#/components/responses/JSONError'
  /v1/declaration-sets/{id}:
    get:
      description: Retrieve the list of sets that a declaration is associated with.
      security:
        - basicAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SetNameList'
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '400':
           $ref: '#/components/responses/JSONBadRequest'
        '500':
           $ref: '#/components/responses/JSONError'
    parameters:
      - $ref: '#/components/parameters/declarationID'
  /v1/declaration-status/{id}:
    get:
      description: tbd
      security:
        - basicAuth: []
      responses:
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '400':
           $ref: '#/components/responses/JSONBadRequest'
        '500':
           $ref: '#/components/responses/JSONError'
  /v1/status-errors/{id}:
    get:
      description: tbd
      security:
        - basicAuth: []
      responses:
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '400':
           $ref: '#/components/responses/JSONBadRequest'
        '500':
           $ref: '#/components/responses/JSONError'
  /v1/status-values/{id}:
    get:
      description: tbd
      security:
        - basicAuth: []
      responses:
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '400':
           $ref: '#/components/responses/JSONBadRequest'
        '500':
           $ref: '#/components/responses/JSONError'
  /v1/notify:
    post:
      description: Notify enrollment IDs by their ID or the sets they belong to, or, transitively, the declaration those sets are assigned.
      security:
        - basicAuth: []
      responses:
        '204':
          description: Notification request received. See server logs for result (notification may be async).
        '401':
           $ref: '#/components/responses/UnauthorizedError'
        '500':
           $ref: '#/components/responses/JSONError'
      parameters:
        - in: query
          name: declaration
          schema:
            type: array
            items:
              type: string
          example: ['com.example.test']
          explode: true
        - in: query
          name: set
          schema:
            type: array
            items:
              type: string
          example: ['default']
          explode: true
        - in: query
          name: id
          schema:
            type: array
            items:
              type: string
          example: ['4A80F3DA-2738-434D-B95C-856811130F3B']
          explode: true
components:
  parameters:
    declarationID:
      name: id
      in: path
      description: Identifier of the declaration.
      required: true
      style: simple
      schema:
        type: string
        example: 'com.example.test'
    setName:
      name: id
      in: path
      description: Name of set.
      required: true
      style: simple
      schema:
        type: string
        example: 'procurement-team'
    declarationIDInQuery:
      name: declaration
      in: query
      description: Declaration identifier.
      required: true
      schema:
        type: string
        example: 'com.example.test'
    noNotify:
      name: nonotify
      in: query
      description: If true then do not notify any enrollments (i.e. send `DeclarativeManagement` commands) if there was a change.
      required: false
      schema:
        type: boolean
        example: true
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  requestBodies:
    Declaration:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Declaration'
  responses:
    AssociationChanged:
      description: Association completed. Enrollments will be notified unless disabled with parameter.
    AssociationUnchanged:
      description: Association did not change (i.e. already associated). Enrollments will not be notified.
    DissociationChanged:
      description: Dissociation completed. Enrollments will be notified unless disabled with parameter.
    DissociationUnchanged:
      description: Dissociation did not change (i.e. already dissociated). Enrollments will not be notified.
    SetNameList:
      description: Array of set names.
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
            example:
              - default
              - accounting
              - procurement-team
              - enroll.9AFDC638-0D78-41F1-BD42-1B9F770EABF7
    DeclarationIDList:
      description: Array of declaration IDs.
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
            example:
              - com.example.act
              - com.example.test
    Declaration:
      description: Declaration.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Declaration'
    UnauthorizedError:
      description: API key is missing or invalid.
      headers:
        WWW-Authenticate:
          schema:
            type: string
    BadRequest:
      description: There was a problem with the supplied request. The request was in an incorrect format or other request data error. See server logs for more information.
      content:
        text/plain:
          schema:
            type: string
            example: Bad Request
    Error:
      description: An internal server error occured on this endpoint. See server logs for more information.
      content:
        text/plain:
          schema:
            type: string
            example: Internal Server Error
    JSONBadRequest:
      description: There was a problem with the supplied request. The request was in an incorrect format or other request data error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONError'  
    JSONError:
      description: An internal server error occured on this endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONError'
  schemas:
    JSONError:
      type: object
      properties:
        error:
          type: string
          example: "it was sunny outside"
    Declaration:
      type: object
      properties:
        Identifier:
          type: string
          example: "E3ADE6E6-0CF5-4C3B-BD4F-92AD2EB0500A"
        ServerToken:
          type: string
          example: d41d8cd98f00b204e9800998ecf8427e
        Payload:
          type: object
        Type:
          type: string
          example: "com.apple.configuration.management.test"