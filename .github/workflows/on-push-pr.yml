name: CI/CD
on:
  push:
    branches: [main]
    tags: ["v*.*.*"]
  pull_request:
    types: [opened, reopened, synchronize]
jobs:
  format-build-test:
    strategy:
      matrix:
        go-version: ['1.21.x', '1.22.x']
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a  # v5.2.0
        with:
          go-version: ${{ matrix.go-version }}

      - if: matrix.platform == 'ubuntu-latest'
        run: if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then exit 1; fi

      - run: go build -v ./...

      - run: make test
  docker-build-push:
    if: github.event_name != 'pull_request'
    needs: format-build-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 0

      - uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567  # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5  # v3.8.0

      - uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96  # v5.6.1
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d  # v6.12.0
        with:
          context: .
          push: true
          file: Dockerfile.buildx
          platforms: linux/amd64,linux/arm64,linux/arm
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  release-zips:
    if: github.event_name != 'pull_request'
    needs: format-build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a  # v5.2.0
        with:
          go-version: '1.21.x'

      - run: CGO_ENABLED=0 make release

      - uses: actions/upload-artifact@v4
        with:
          name: release-zips
          path: "*.zip"
